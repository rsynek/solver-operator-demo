########################
# Demo properties
########################

# The demo dataset size: NONE, SMALL, LARGE
# timeTable.demoData=LARGE

########################
# OptaPlanner properties
########################

# The solver runs for 30 seconds. To run for 5 minutes use "5m" and for 2 hours use "2h".
quarkus.optaplanner.solver.termination.spent-limit=5s

# To change how many solvers to run in parallel
# optaplanner.solver-manager.parallel-solver-count=4
# To run increase CPU cores usage per solver
# quarkus.optaplanner.solver.move-thread-count=2

# Temporary comment this out to detect bugs in your code (lowers performance)
# quarkus.optaplanner.solver.environment-mode=FULL_ASSERT
# To see what OptaPlanner is doing, turn on DEBUG or TRACE logging.
quarkus.log.category."org.optaplanner".level=INFO
%test.quarkus.log.category."org.optaplanner".level=INFO
%prod.quarkus.log.category."org.optaplanner".level=INFO

# XML file for power tweaking, defaults to solverConfig.xml (directly under src/main/resources)
# quarkus.optaplanner.solver-config-xml=org/.../timeTableSolverConfig.xml

########################
# Messaging properties
########################
kafka.bootstrap.servers=localhost:9092

#mp.messaging.outgoing.solver.connector=kafka
mp.messaging.outgoing.solver.topic=solver

########################
# Test overrides
########################

# Effectively disable spent-time termination in favor of the best-score-limit
%test.quarkus.optaplanner.solver.termination.spent-limit=1h
%test.quarkus.optaplanner.solver.termination.best-score-limit=0hard/*soft

########################
# Native overrides
########################

# In pom.xml, the "native" maven profile triggers the "native" quarkus profile.
%native.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/mem:school-timetabling
